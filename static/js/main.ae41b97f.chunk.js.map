{"version":3,"sources":["images/oxidation_resistance_poster.png","images/oxidation_resistance_poster_thumbnail_uniform.png","images/protocell_self_assembly_poster.png","images/protocell_self_assembly_poster_thumbnail_uniform.png","images/rgc_neuro_poster.png","images/rgc_neuro_poster_thumbnail_uniform.png","images/variant_caller_poster.png","images/variant_caller_poster_thumbnail_uniform.png","StyledNav.js","App.js","reportWebVitals.js","index.js"],"names":["StyledSideNav","styled","SideNav","defaultProps","Toggle","Nav","NavItem","NavIcon","NavText","Main","main","props","expanded","Posters","original","oxidation_resistance_poster","thumbnail","oxidation_resistance_poster_thumbnail","width","height","ref","open","onClick","src","variant_caller_poster","variant_caller_poster_thumbnail","protocell_self_assembly_poster","protocell_self_assembly_poster_thumbnail","rgc_neuro_poster","rgc_neuro_poster_thumbnail","Publications","href","Content","name","JSON","stringify","App","state","selected","onSelect","setState","onToggle","defaultSelected","eventKey","className","style","fontSize","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae41b97f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/oxidation_resistance_poster.4fc54cc9.png\";","export default __webpack_public_path__ + \"static/media/oxidation_resistance_poster_thumbnail_uniform.6c17893b.png\";","export default __webpack_public_path__ + \"static/media/protocell_self_assembly_poster.57fff76a.png\";","export default __webpack_public_path__ + \"static/media/protocell_self_assembly_poster_thumbnail_uniform.053da4be.png\";","export default __webpack_public_path__ + \"static/media/rgc_neuro_poster.10a51822.png\";","export default __webpack_public_path__ + \"static/media/rgc_neuro_poster_thumbnail_uniform.c2ecf7ca.png\";","export default __webpack_public_path__ + \"static/media/variant_caller_poster.d0ea1cb2.png\";","export default __webpack_public_path__ + \"static/media/variant_caller_poster_thumbnail_uniform.ad4d987c.png\";","import SideNav, { Toggle, Nav, NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\n\nimport styled from 'styled-components';\n\n\n// SideNav\nconst StyledSideNav = styled(SideNav)`\n  background-color: #18b1ee;\n  border-right: 1px solid #ddd;\n  position:fixed;\n`;\nStyledSideNav.defaultProps = SideNav.defaultProps;\n\n// Toggle\nconst StyledToggle = styled(Toggle)`\n    background-color: #18b1ee;\n`;\nStyledToggle.defaultProps = Toggle.defaultProps;\n\n// Nav\nconst StyledNav = styled(Nav)`\n  background-color: #fff;\n\n  &&[class*=\"expanded--\"] {\n    [class*=\"sidenav-subnav--\"] {\n      > [class*=\"sidenav-subnavitem--\"],\n      > [class*=\"sidenav-subnavitem--\"]:hover {\n        > [class*=\"navitem--\"] {\n          color: #222;\n        }\n      }\n\n      > [class*=\"sidenav-subnavitem--\"]:hover {\n        > [class*=\"navitem--\"] {\n          background-color: #eaeaea;\n        }\n      }\n\n      > [class*=\"sidenav-subnavitem--\"][class*=\"selected--\"] {\n        > [class*=\"navitem--\"] {\n          color: #18b1ee;\n        }\n\n        > [class*=\"navitem--\"]::before {\n          border-left: 2px solid #18b1ee;\n        }\n      }\n    }\n  }\n\n  && > [class*=\"sidenav-navitem--\"] {\n    > [class*=\"navitem--\"] {\n      background-color: inherit;\n      color: #222;\n    }\n  }\n\n  && > [class*=\"sidenav-navitem--\"]:hover {\n    > [class*=\"navitem--\"] {\n      background-color: #eee;\n    }\n  }\n\n  && > [class*=\"sidenav-navitem--\"],\n  && > [class*=\"sidenav-navitem--\"]:hover {\n    > [class*=\"navitem--\"] {\n      [class*=\"navicon--\"] {\n        &, > * {\n          color: #666;\n        }\n      }\n\n      [class*=\"sidenav-nav-text--\"] {\n        &, > * {\n          color: #222;\n        }\n      }\n    }\n  }\n\n  && > [class*=\"sidenav-navitem--\"][class*=\"highlighted--\"],\n  && > [class*=\"sidenav-navitem--\"][class*=\"highlighted--\"]:hover {\n    > [class*=\"navitem--\"] {\n      [class*=\"navicon--\"],\n      [class*=\"navtext--\"] {\n        &, > * {\n          color: #18b1ee;\n        }\n      }\n\n      [class*=\"sidenav-nav-text--\"] {\n        font-weight: 700;\n      }\n    }\n  }\n`;\nStyledNav.defaultProps = Nav.defaultProps;\n\n// NavItem\nconst StyledNavItem = styled(NavItem)`\n    &&&:hover {\n        [class*=\"navtext--\"] {\n            color: #222;\n        }\n    }\n`;\nStyledNavItem.defaultProps = NavItem.defaultProps;\n\n// NavIcon\nconst StyledNavIcon = styled(NavIcon)`\n    color: #222;\n`;\nStyledNavIcon.defaultProps = NavIcon.defaultProps;\n\n// NavText\nconst StyledNavText = styled(NavText)`\n    color: #222;\n`;\nStyledNavText.defaultProps = NavText.defaultProps;\n\nexport {\n    StyledToggle as Toggle,\n    StyledNav as Nav,\n    StyledNavItem as NavItem,\n    StyledNavIcon as NavIcon,\n    StyledNavText as NavText\n};\nexport default StyledSideNav;\n","import './App.css';\nimport oxidation_resistance_poster from './images/oxidation_resistance_poster.png'\nimport oxidation_resistance_poster_thumbnail from './images/oxidation_resistance_poster_thumbnail_uniform.png'\nimport protocell_self_assembly_poster from './images/protocell_self_assembly_poster.png'\nimport protocell_self_assembly_poster_thumbnail from './images/protocell_self_assembly_poster_thumbnail_uniform.png'\nimport rgc_neuro_poster from './images/rgc_neuro_poster.png'\nimport rgc_neuro_poster_thumbnail from './images/rgc_neuro_poster_thumbnail_uniform.png'\nimport variant_caller_poster from './images/variant_caller_poster.png'\nimport variant_caller_poster_thumbnail from './images/variant_caller_poster_thumbnail_uniform.png'\n\nimport SideNav, { Toggle, Nav, NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\nimport StyledSideNav from \"./StyledNav\";\nimport styled from 'styled-components';\nimport React, { Component } from 'react';\n\nimport 'photoswipe/dist/photoswipe.css'\nimport 'photoswipe/dist/default-skin/default-skin.css'\n\nimport { Gallery, Item } from 'react-photoswipe-gallery'\n\n\n// Define main component here\nconst Main = styled.main`\n    position: relative;\n    overflow: hidden;\n    transition: all .15s;\n    padding: 20px 20px;\n    margin-left: ${props => (props.expanded ? 240 : 64)}px;\n`;\n\n\nfunction Print(props) {\n    return <text>name = {props.name}</text>;\n}\n\n\nfunction Posters(){\n    return(\n        <div>\n            <h1>Posters</h1>\n            Academic posters I created during my undergraduate and graduate career\n            <br/>\n            <br/>\n            <br/>\n\n            <Gallery>\n                <Item\n                    original={oxidation_resistance_poster}\n                    thumbnail={oxidation_resistance_poster_thumbnail}\n                    width=\"6300\"\n                    height=\"4800\"\n                >\n                    {({ ref, open }) => (\n                        <img ref={ref} onClick={open} src={oxidation_resistance_poster_thumbnail} />\n                    )}\n                </Item>\n                <Item\n                    original={variant_caller_poster}\n                    thumbnail={variant_caller_poster_thumbnail}\n                    width=\"7201\"\n                    height=\"5400\"\n                >\n                    {({ ref, open }) => (\n                        <img ref={ref} onClick={open} src={variant_caller_poster_thumbnail} />\n                    )}\n                </Item>\n                <Item\n                    original={protocell_self_assembly_poster}\n                    thumbnail={protocell_self_assembly_poster_thumbnail}\n                    width=\"6901\"\n                    height=\"5700\"\n                >\n                    {({ ref, open }) => (\n                        <img ref={ref} onClick={open} src={protocell_self_assembly_poster_thumbnail} />\n                    )}\n                </Item>\n                <Item\n                    original={rgc_neuro_poster}\n                    thumbnail={rgc_neuro_poster_thumbnail}\n                    width=\"6901\"\n                    height=\"5700\"\n                >\n                    {({ ref, open }) => (\n                        <img ref={ref} onClick={open} src={rgc_neuro_poster_thumbnail} />\n                    )}\n                </Item>\n            </Gallery>\n        </div>\n    );\n}\n\n\nfunction Publications(){\n\n    return(\n\n        <div>\n            <h1>Publications</h1>\n\n            <h3>Co-first author</h3>\n            Nanopore sequencing and the Shasta toolkit enable efficient de novo assembly of eleven human genomes\n            <br/>\n            <a href='https://doi.org/10.1038/s41587-020-0503-6'>https://doi.org/10.1038/s41587-020-0503-6</a>\n            <br/><br/>\n            Walk-Preserving Transformation of Overlapped Sequence Graphs into Blunt Sequence Graphs with GetBlunted\n            <br/>\n            <a href='https://doi.org/10.1007/978-3-030-80049-9_15'>https://doi.org/10.1007/978-3-030-80049-9_15</a>\n            <br/><br/>\n\n            <h3>Contributor</h3>\n            Complete genomic and epigenetic maps of human centromeres\n            <br/>\n            <a href='https://doi.org/10.1101/2021.07.12.452052'>https://doi.org/10.1101/2021.07.12.452052</a>\n            <br/><br/>\n            Human-Specific NOTCH2NL Genes Affect Notch Signaling and Cortical Neurogenesis\n            <br/>\n            <a href='https://doi.org/10.1016/j.cell.2018.03.051'>https://doi.org/10.1016/j.cell.2018.03.051</a>\n            <br/><br/>\n            Expression of transcription factors divides retinal ganglion cells into distinct classes\n            <br/>\n            <a href='https://doi.org/10.1002/cne.24172'>https://doi.org/10.1002/cne.24172</a>\n            <br/><br/>\n            Condensation and Decomposition of Nucleotides in Simulated Hydrothermal Fields\n            <br/>\n            <a href='https://doi.org/10.1007/978-3-319-93584-3_2'>https://doi.org/10.1007/978-3-319-93584-3_2</a>\n            <br/><br/>\n\n        </div>\n\n    );\n}\n\n\nfunction Content(props){\n    if (props.name === 'home') {\n        return(\n            <h1>Home</h1>\n        );\n    } else if (props.name === 'publications'){\n        return(\n            <Publications/>\n        );\n    } else if (props.name === 'projects'){\n        return(\n            <h1>Projects</h1>\n        );\n    } else if (props.name === 'posters'){\n        return(\n            <Posters/>\n        )\n    } else {\n        return(\n            <div>Error unknown page identifier {JSON.stringify(props.name)}</div>\n        );\n    }\n}\n\n\nclass App extends Component {\n    state = {\n        selected: 'home',\n        expanded: false\n    };\n\n    // onSelect = (selected) => {\n    //   this.setState({ selected: selected });\n    // };\n    // onToggle = (expanded) => {\n    //   this.setState({ expanded: expanded });\n    // };\n\n    render() {\n        return (\n            <div>\n                <StyledSideNav\n                    onSelect = {(selected) => {\n                        this.setState({ selected: selected });\n                    }}\n                    onToggle = {(expanded) => {\n                        this.setState({ expanded: expanded });\n                    }}\n                >\n                    <StyledSideNav.Toggle/>\n                    <StyledSideNav.Nav defaultSelected=\"home\">\n                        <NavItem eventKey=\"home\">\n                            <NavIcon>\n                                <i className=\"fa fa-fw fa-home\" style={{fontSize: '1.75em'}}/>\n                            </NavIcon>\n                            <NavText>\n                                Home\n                            </NavText>\n                        </NavItem>\n                        <NavItem eventKey=\"publications\">\n                            <NavIcon>\n                                <i className=\"fa fa-fw fa-publications\" style={{fontSize: '1.75em'}}/>\n                            </NavIcon>\n                            <NavText>\n                                Publications\n                            </NavText>\n                        </NavItem>\n                        <NavItem eventKey=\"projects\">\n                            <NavIcon>\n                                <i className=\"fa fa-fw fa-projects\" style={{fontSize: '1.75em'}}/>\n                            </NavIcon>\n                            <NavText>\n                                Projects\n                            </NavText>\n                        </NavItem>\n                        <NavItem eventKey=\"posters\">\n                            <NavIcon>\n                                <i className=\"fa fa-fw fa-posters\" style={{fontSize: '1.75em'}}/>\n                            </NavIcon>\n                            <NavText>\n                                Posters\n                            </NavText>\n                        </NavItem>\n                    </StyledSideNav.Nav>\n                </StyledSideNav>\n                <Main expanded={this.state.expanded}>\n                    <Content name={this.state.selected} />\n                </Main>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}