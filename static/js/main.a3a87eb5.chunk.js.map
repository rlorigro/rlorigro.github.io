{"version":3,"sources":["StyledNav.js","App.js","reportWebVitals.js","index.js"],"names":["StyledSideNav","styled","SideNav","defaultProps","Toggle","Nav","NavItem","NavIcon","NavText","Main","main","props","expanded","Print","name","Content","JSON","stringify","App","state","selected","onSelect","setState","onToggle","defaultSelected","eventKey","className","style","fontSize","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAOMA,EAAgBC,YAAOC,IAAPD,CAAH,2FAInBD,EAAcG,aAAeD,IAAQC,aAGhBF,YAAOG,SAAPH,CAAH,4DAGLE,aAAeC,SAAOD,aAGjBF,YAAOI,MAAPJ,CAAH,6mDA4ELE,aAAeE,MAAIF,aAGPF,YAAOK,UAAPL,CAAH,yHAOLE,aAAeG,UAAQH,aAGfF,YAAOM,UAAPN,CAAH,8CAGLE,aAAeI,UAAQJ,aAGfF,YAAOO,UAAPP,CAAH,8CAGLE,aAAeK,UAAQL,aAStBH,I,EAAAA,I,OCtHTS,EAAOR,IAAOS,KAAV,yJAKS,SAAAC,GAAK,OAAKA,EAAMC,SAAW,IAAM,MAIpD,SAASC,EAAMF,GACb,OAAO,2CAAcA,EAAMG,QAI7B,SAASC,EAAQJ,GACf,MAAmB,SAAfA,EAAMG,KAEN,sCAEsB,iBAAfH,EAAMG,KAEb,8CAEsB,aAAfH,EAAMG,KAEb,0CAEsB,YAAfH,EAAMG,KAEb,yCAIA,iEAAoCE,KAAKC,UAAUN,EAAMG,S,IAMzDI,E,4MACJC,MAAQ,CACNC,SAAU,OACVR,UAAU,G,4CAUZ,WAAU,IAAD,OACP,OACI,gCACE,eAAC,EAAD,CACIS,SAAY,SAACD,GACX,EAAKE,SAAS,CAAEF,SAAUA,KAE5BG,SAAY,SAACX,GACX,EAAKU,SAAS,CAAEV,SAAUA,KALhC,UAQE,cAAC,EAAcR,OAAf,IACA,eAAC,EAAcC,IAAf,CAAmBmB,gBAAgB,OAAnC,UACE,eAAC,UAAD,CAASC,SAAS,OAAlB,UACE,cAAC,UAAD,UACE,mBAAGC,UAAU,mBAAmBC,MAAO,CAACC,SAAU,cAEpD,cAAC,UAAD,sBAIF,eAAC,UAAD,CAASH,SAAS,eAAlB,UACE,cAAC,UAAD,UACE,mBAAGC,UAAU,2BAA2BC,MAAO,CAACC,SAAU,cAE5D,cAAC,UAAD,8BAIF,eAAC,UAAD,CAASH,SAAS,WAAlB,UACE,cAAC,UAAD,UACE,mBAAGC,UAAU,uBAAuBC,MAAO,CAACC,SAAU,cAExD,cAAC,UAAD,0BAIF,eAAC,UAAD,CAASH,SAAS,UAAlB,UACE,cAAC,UAAD,UACE,mBAAGC,UAAU,sBAAsBC,MAAO,CAACC,SAAU,cAEvD,cAAC,UAAD,+BAMJ,eAACnB,EAAD,CAAMG,SAAUiB,KAAKV,MAAMP,SAA3B,UACE,cAACG,EAAD,CAASD,KAAMe,KAAKV,MAAMC,WAC1B,cAACP,EAAD,CAAOC,KAAK,mB,GA9DRgB,aAqEHZ,ICzGAa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a3a87eb5.chunk.js","sourcesContent":["import SideNav, { Toggle, Nav, NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\n\nimport styled from 'styled-components';\n\n\n// SideNav\nconst StyledSideNav = styled(SideNav)`\n  background-color: #18b1ee;\n  border-right: 1px solid #ddd;\n`;\nStyledSideNav.defaultProps = SideNav.defaultProps;\n\n// Toggle\nconst StyledToggle = styled(Toggle)`\n    background-color: #18b1ee;\n`;\nStyledToggle.defaultProps = Toggle.defaultProps;\n\n// Nav\nconst StyledNav = styled(Nav)`\n  background-color: #fff;\n\n  &&[class*=\"expanded--\"] {\n    [class*=\"sidenav-subnav--\"] {\n      > [class*=\"sidenav-subnavitem--\"],\n      > [class*=\"sidenav-subnavitem--\"]:hover {\n        > [class*=\"navitem--\"] {\n          color: #222;\n        }\n      }\n\n      > [class*=\"sidenav-subnavitem--\"]:hover {\n        > [class*=\"navitem--\"] {\n          background-color: #eaeaea;\n        }\n      }\n\n      > [class*=\"sidenav-subnavitem--\"][class*=\"selected--\"] {\n        > [class*=\"navitem--\"] {\n          color: #18b1ee;\n        }\n\n        > [class*=\"navitem--\"]::before {\n          border-left: 2px solid #18b1ee;\n        }\n      }\n    }\n  }\n\n  && > [class*=\"sidenav-navitem--\"] {\n    > [class*=\"navitem--\"] {\n      background-color: inherit;\n      color: #222;\n    }\n  }\n\n  && > [class*=\"sidenav-navitem--\"]:hover {\n    > [class*=\"navitem--\"] {\n      background-color: #eee;\n    }\n  }\n\n  && > [class*=\"sidenav-navitem--\"],\n  && > [class*=\"sidenav-navitem--\"]:hover {\n    > [class*=\"navitem--\"] {\n      [class*=\"navicon--\"] {\n        &, > * {\n          color: #666;\n        }\n      }\n\n      [class*=\"sidenav-nav-text--\"] {\n        &, > * {\n          color: #222;\n        }\n      }\n    }\n  }\n\n  && > [class*=\"sidenav-navitem--\"][class*=\"highlighted--\"],\n  && > [class*=\"sidenav-navitem--\"][class*=\"highlighted--\"]:hover {\n    > [class*=\"navitem--\"] {\n      [class*=\"navicon--\"],\n      [class*=\"navtext--\"] {\n        &, > * {\n          color: #18b1ee;\n        }\n      }\n\n      [class*=\"sidenav-nav-text--\"] {\n        font-weight: 700;\n      }\n    }\n  }\n`;\nStyledNav.defaultProps = Nav.defaultProps;\n\n// NavItem\nconst StyledNavItem = styled(NavItem)`\n    &&&:hover {\n        [class*=\"navtext--\"] {\n            color: #222;\n        }\n    }\n`;\nStyledNavItem.defaultProps = NavItem.defaultProps;\n\n// NavIcon\nconst StyledNavIcon = styled(NavIcon)`\n    color: #222;\n`;\nStyledNavIcon.defaultProps = NavIcon.defaultProps;\n\n// NavText\nconst StyledNavText = styled(NavText)`\n    color: #222;\n`;\nStyledNavText.defaultProps = NavText.defaultProps;\n\nexport {\n    StyledToggle as Toggle,\n    StyledNav as Nav,\n    StyledNavItem as NavItem,\n    StyledNavIcon as NavIcon,\n    StyledNavText as NavText\n};\nexport default StyledSideNav;\n","import './App.css';\n\nimport SideNav, { Toggle, Nav, NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\nimport StyledSideNav from \"./StyledNav\";\nimport styled from 'styled-components';\nimport React, { Component } from 'react';\n\n\n// Define main component here\nconst Main = styled.main`\n    position: relative;\n    overflow: hidden;\n    transition: all .15s;\n    padding: 20px 20px;\n    margin-left: ${props => (props.expanded ? 240 : 64)}px;\n`;\n\n\nfunction Print(props) {\n  return <text>name = {props.name}</text>;\n}\n\n\nfunction Content(props){\n  if (props.name === 'home') {\n    return(\n      <h1>Home</h1>\n    );\n  } else if (props.name === 'publications'){\n    return(\n      <h1>Publications</h1>\n    );\n  } else if (props.name === 'projects'){\n    return(\n      <h1>Projects</h1>\n    );\n  } else if (props.name === 'posters'){\n    return(\n      <h1>Posters</h1>\n    );\n  } else {\n    return(\n      <div>Error unknown page identifier {JSON.stringify(props.name)}</div>\n    );\n  }\n}\n\n\nclass App extends Component {\n  state = {\n    selected: 'home',\n    expanded: false\n  };\n\n  // onSelect = (selected) => {\n  //   this.setState({ selected: selected });\n  // };\n  // onToggle = (expanded) => {\n  //   this.setState({ expanded: expanded });\n  // };\n\n  render() {\n    return (\n        <div>\n          <StyledSideNav\n              onSelect = {(selected) => {\n                this.setState({ selected: selected });\n              }}\n              onToggle = {(expanded) => {\n                this.setState({ expanded: expanded });\n              }}\n            >\n            <StyledSideNav.Toggle/>\n            <StyledSideNav.Nav defaultSelected=\"home\">\n              <NavItem eventKey=\"home\">\n                <NavIcon>\n                  <i className=\"fa fa-fw fa-home\" style={{fontSize: '1.75em'}}/>\n                </NavIcon>\n                <NavText>\n                  Home\n                </NavText>\n              </NavItem>\n              <NavItem eventKey=\"publications\">\n                <NavIcon>\n                  <i className=\"fa fa-fw fa-publications\" style={{fontSize: '1.75em'}}/>\n                </NavIcon>\n                <NavText>\n                  Publications\n                </NavText>\n              </NavItem>\n              <NavItem eventKey=\"projects\">\n                <NavIcon>\n                  <i className=\"fa fa-fw fa-projects\" style={{fontSize: '1.75em'}}/>\n                </NavIcon>\n                <NavText>\n                  Projects\n                </NavText>\n              </NavItem>\n              <NavItem eventKey=\"posters\">\n                <NavIcon>\n                  <i className=\"fa fa-fw fa-posters\" style={{fontSize: '1.75em'}}/>\n                </NavIcon>\n                <NavText>\n                  Posters\n                </NavText>\n              </NavItem>\n            </StyledSideNav.Nav>\n          </StyledSideNav>\n            <Main expanded={this.state.expanded}>\n              <Content name={this.state.selected} />\n              <Print name='aaaa'/>\n            </Main>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}